name: prebuild

on:
  release:
    types:
      - published

env:
  NODE_TARGET_VERSIONS: ${{ join(fromJSON('["14.0.0", "16.0.0", "18.0.0"]'), ' -t ') }}
  ELECTRON_TARGET_VERSIONS: ${{ join(fromJSON('["16.0.0", "17.0.0", "18.0.0", "19.0.0", "20.0.0", "21.0.0", "22.0.0", "23.0.0"]'), ' -t ') }}

jobs:
  prebuild:
    strategy:
      matrix:
        os:
          - ubuntu-18.04
          - macos-latest
          - windows-2019
    name: Prebuild on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install --ignore-scripts
      - run: npx --no-install prebuild -r node -t ${{ env.NODE_TARGET_VERSIONS }} --include-regex 'better_sqlite3.node$' -u ${{ secrets.GITHUB_TOKEN }}
      - run: npx --no-install prebuild -r electron -t ${{ env.ELECTRON_TARGET_VERSIONS }} --include-regex 'better_sqlite3.node$' -u ${{ secrets.GITHUB_TOKEN }}
      - if: matrix.os == 'windows-2019'
        run: npx --no-install prebuild -r electron -t ${{ env.ELECTRON_TARGET_VERSIONS }} --include-regex 'better_sqlite3.node$' --arch ia32 -u ${{ secrets.GITHUB_TOKEN }}
      - if: matrix.os == 'macos-latest'
        run: npx --no-install prebuild -r electron -t ${{ env.ELECTRON_TARGET_VERSIONS }} --include-regex 'better_sqlite3.node$' --arch arm64 -u ${{ secrets.GITHUB_TOKEN }}

  prebuild-alpine-linux:
    name: Prebuild on Alpine-Linux (x64)
    runs-on: ubuntu-latest
    container: node:16-alpine
    steps:
      - uses: actions/checkout@v3
      - run: apk add build-base git python3 --update-cache
      - run: npm install --ignore-scripts
      - run: npx --no-install prebuild -r node -t ${{ env.NODE_TARGET_VERSIONS }} --include-regex 'better_sqlite3.node$' -u ${{ secrets.GITHUB_TOKEN }}

  prebuild-alpine-linux-arm64:
    name: Prebuild on Alpine-Linux (arm64)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - run: |
          docker run --rm -v $(pwd):/tmp/project --entrypoint /bin/sh --platform linux/arm64 node:16-alpine -c "\
          apk add build-base git python3 --update-cache && \
          cd /tmp/project && \
          npm install --ignore-scripts && \
          npx --no-install prebuild -r node -t ${{ env.NODE_TARGET_VERSIONS }} --include-regex 'better_sqlite3.node$' -u ${{ secrets.GITHUB_TOKEN }}"

  prebuild-linux-arm:
    strategy:
      matrix:
        arch:
          - arm/v7
          - arm64
    name: Prebuild on Linux (${{ matrix.arch }})
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - run: |
          docker run --rm -v $(pwd):/tmp/project --entrypoint /bin/sh --platform linux/${{ matrix.arch }} node:16 -c "\
          cd /tmp/project && \
          npm install --ignore-scripts && \
          npx --no-install prebuild -r node -t ${{ env.NODE_TARGET_VERSIONS }} --include-regex 'better_sqlite3.node$' -u ${{ secrets.GITHUB_TOKEN }}"
